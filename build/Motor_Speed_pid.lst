ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"Motor_Speed_pid.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/Motor_Speed_pid.c"
  20              		.section	.text.low_pass_filter,"ax",%progbits
  21              		.align	1
  22              		.global	low_pass_filter
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	low_pass_filter:
  28              	.LVL0:
  29              	.LFB162:
   1:Core/Src/Motor_Speed_pid.c **** #include "Motor_Speed_pid.h"
   2:Core/Src/Motor_Speed_pid.c **** 
   3:Core/Src/Motor_Speed_pid.c **** #define MAX_SPEED_RPM 20000  // 最大转速
   4:Core/Src/Motor_Speed_pid.c **** 
   5:Core/Src/Motor_Speed_pid.c **** PID_TypeDef motor_pid[4];
   6:Core/Src/Motor_Speed_pid.c **** float set_spdL;// rpm  ���ֽ��ٶȣ�ת�٣�        1 rpm = pi/30 = 0.1047 ��rad/s
   7:Core/Src/Motor_Speed_pid.c **** float set_spdR;// rpm  ���ֽ��ٶȣ�ת�٣�
   8:Core/Src/Motor_Speed_pid.c **** 
   9:Core/Src/Motor_Speed_pid.c **** float set_spdL1;
  10:Core/Src/Motor_Speed_pid.c **** float set_spdR1;
  11:Core/Src/Motor_Speed_pid.c **** 
  12:Core/Src/Motor_Speed_pid.c **** extern float Vcx;   //   m/s 
  13:Core/Src/Motor_Speed_pid.c **** extern float Wc;    //   rad/s 
  14:Core/Src/Motor_Speed_pid.c **** float C = 0.46;     //   m 
  15:Core/Src/Motor_Speed_pid.c **** float r = 0.1;     //   m 
  16:Core/Src/Motor_Speed_pid.c **** int flaggg = 0;
  17:Core/Src/Motor_Speed_pid.c **** 
  18:Core/Src/Motor_Speed_pid.c **** int motor_ready = 0; //电机被控制
  19:Core/Src/Motor_Speed_pid.c **** int motor_shutdown = 0; //电机使能
  20:Core/Src/Motor_Speed_pid.c **** int free_flag = 0; // 0不允许自由滑动
  21:Core/Src/Motor_Speed_pid.c **** 
  22:Core/Src/Motor_Speed_pid.c **** extern int control_mode;  // 0: 手柄控制, 1: 串口控制
  23:Core/Src/Motor_Speed_pid.c **** 
  24:Core/Src/Motor_Speed_pid.c **** 
  25:Core/Src/Motor_Speed_pid.c **** 
  26:Core/Src/Motor_Speed_pid.c **** 
  27:Core/Src/Motor_Speed_pid.c **** float low_pass_filter(float value, float fc, float Ts)
  28:Core/Src/Motor_Speed_pid.c **** {
  30              		.loc 1 28 1 view -0
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 2


  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  29:Core/Src/Motor_Speed_pid.c **** 	
  30:Core/Src/Motor_Speed_pid.c **** 	
  31:Core/Src/Motor_Speed_pid.c ****   float b = fc * Ts;
  35              		.loc 1 31 3 view .LVU1
  36              		.loc 1 31 9 is_stmt 0 view .LVU2
  37 0000 60EE810A 		vmul.f32	s1, s1, s2
  38              	.LVL1:
  32:Core/Src/Motor_Speed_pid.c ****   float alpha = b / (b + 1);
  39              		.loc 1 32 3 is_stmt 1 view .LVU3
  40              		.loc 1 32 24 is_stmt 0 view .LVU4
  41 0004 F7EE007A 		vmov.f32	s15, #1.0e+0
  42 0008 70EEA77A 		vadd.f32	s15, s1, s15
  43              		.loc 1 32 9 view .LVU5
  44 000c 80EEA77A 		vdiv.f32	s14, s1, s15
  45              	.LVL2:
  33:Core/Src/Motor_Speed_pid.c ****   static float out_last = 0; //��һ���˲�ֵ
  46              		.loc 1 33 3 is_stmt 1 view .LVU6
  34:Core/Src/Motor_Speed_pid.c ****   float out;
  47              		.loc 1 34 3 view .LVU7
  35:Core/Src/Motor_Speed_pid.c **** 
  36:Core/Src/Motor_Speed_pid.c ****   static char fisrt_flag = 1;
  48              		.loc 1 36 3 view .LVU8
  37:Core/Src/Motor_Speed_pid.c ****   if (fisrt_flag == 1)
  49              		.loc 1 37 3 view .LVU9
  50              		.loc 1 37 18 is_stmt 0 view .LVU10
  51 0010 0B4B     		ldr	r3, .L4
  52 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  53              		.loc 1 37 6 view .LVU11
  54 0014 012B     		cmp	r3, #1
  55 0016 0BD0     		beq	.L3
  56              	.L2:
  38:Core/Src/Motor_Speed_pid.c ****   {
  39:Core/Src/Motor_Speed_pid.c ****     fisrt_flag = 0;
  40:Core/Src/Motor_Speed_pid.c ****     out_last = value;
  41:Core/Src/Motor_Speed_pid.c ****   }
  42:Core/Src/Motor_Speed_pid.c **** 
  43:Core/Src/Motor_Speed_pid.c ****   out = out_last + alpha * (value - out_last);
  57              		.loc 1 43 3 is_stmt 1 view .LVU12
  58              		.loc 1 43 35 is_stmt 0 view .LVU13
  59 0018 0A4B     		ldr	r3, .L4+4
  60 001a D3ED007A 		vldr.32	s15, [r3]
  61 001e 30EE670A 		vsub.f32	s0, s0, s15
  62              	.LVL3:
  63              		.loc 1 43 26 view .LVU14
  64 0022 20EE070A 		vmul.f32	s0, s0, s14
  65              		.loc 1 43 7 view .LVU15
  66 0026 37EE800A 		vadd.f32	s0, s15, s0
  67              	.LVL4:
  44:Core/Src/Motor_Speed_pid.c ****   out_last = out;
  68              		.loc 1 44 3 is_stmt 1 view .LVU16
  69              		.loc 1 44 12 is_stmt 0 view .LVU17
  70 002a 83ED000A 		vstr.32	s0, [r3]
  45:Core/Src/Motor_Speed_pid.c **** 
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 3


  46:Core/Src/Motor_Speed_pid.c ****   return out;
  71              		.loc 1 46 3 is_stmt 1 view .LVU18
  47:Core/Src/Motor_Speed_pid.c **** }
  72              		.loc 1 47 1 is_stmt 0 view .LVU19
  73 002e 7047     		bx	lr
  74              	.LVL5:
  75              	.L3:
  39:Core/Src/Motor_Speed_pid.c ****     out_last = value;
  76              		.loc 1 39 5 is_stmt 1 view .LVU20
  39:Core/Src/Motor_Speed_pid.c ****     out_last = value;
  77              		.loc 1 39 16 is_stmt 0 view .LVU21
  78 0030 034B     		ldr	r3, .L4
  79 0032 0022     		movs	r2, #0
  80 0034 1A70     		strb	r2, [r3]
  40:Core/Src/Motor_Speed_pid.c ****   }
  81              		.loc 1 40 5 is_stmt 1 view .LVU22
  40:Core/Src/Motor_Speed_pid.c ****   }
  82              		.loc 1 40 14 is_stmt 0 view .LVU23
  83 0036 034B     		ldr	r3, .L4+4
  84 0038 83ED000A 		vstr.32	s0, [r3]
  85 003c ECE7     		b	.L2
  86              	.L5:
  87 003e 00BF     		.align	2
  88              	.L4:
  89 0040 00000000 		.word	fisrt_flag.1
  90 0044 00000000 		.word	out_last.0
  91              		.cfi_endproc
  92              	.LFE162:
  94              		.global	__aeabi_f2d
  95              		.global	__aeabi_dmul
  96              		.global	__aeabi_d2f
  97              		.section	.text.Motor_Speed_Calc,"ax",%progbits
  98              		.align	1
  99              		.global	Motor_Speed_Calc
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 104              	Motor_Speed_Calc:
 105              	.LFB163:
  48:Core/Src/Motor_Speed_pid.c **** 
  49:Core/Src/Motor_Speed_pid.c **** 
  50:Core/Src/Motor_Speed_pid.c **** // C = 0.46;     //   m 
  51:Core/Src/Motor_Speed_pid.c **** // r = 0.1;     //   m 
  52:Core/Src/Motor_Speed_pid.c ****  
  53:Core/Src/Motor_Speed_pid.c **** void Motor_Speed_Calc()
  54:Core/Src/Motor_Speed_pid.c **** {
 106              		.loc 1 54 1 is_stmt 1 view -0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110 0000 08B5     		push	{r3, lr}
 111              	.LCFI0:
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 3, -8
 114              		.cfi_offset 14, -4
 115 0002 2DED048B 		vpush.64	{d8, d9}
 116              	.LCFI1:
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 4


 117              		.cfi_def_cfa_offset 24
 118              		.cfi_offset 80, -24
 119              		.cfi_offset 81, -20
 120              		.cfi_offset 82, -16
 121              		.cfi_offset 83, -12
  55:Core/Src/Motor_Speed_pid.c ****     if (motor_shutdown == 1)
 122              		.loc 1 55 5 view .LVU25
 123              		.loc 1 55 24 is_stmt 0 view .LVU26
 124 0006 464B     		ldr	r3, .L22+16
 125 0008 1B68     		ldr	r3, [r3]
 126              		.loc 1 55 8 view .LVU27
 127 000a 012B     		cmp	r3, #1
 128 000c 0DD0     		beq	.L6
  56:Core/Src/Motor_Speed_pid.c ****     {
  57:Core/Src/Motor_Speed_pid.c ****         led_white_start;
  58:Core/Src/Motor_Speed_pid.c ****         Set_free;
  59:Core/Src/Motor_Speed_pid.c ****     }
  60:Core/Src/Motor_Speed_pid.c ****     else if (motor_shutdown == 0 && motor_ready == 1) 
 129              		.loc 1 60 10 is_stmt 1 view .LVU28
 130              		.loc 1 60 13 is_stmt 0 view .LVU29
 131 000e 1BB9     		cbnz	r3, .L8
 132              		.loc 1 60 49 discriminator 1 view .LVU30
 133 0010 444A     		ldr	r2, .L22+20
 134 0012 1268     		ldr	r2, [r2]
 135              		.loc 1 60 34 discriminator 1 view .LVU31
 136 0014 012A     		cmp	r2, #1
 137 0016 0BD0     		beq	.L21
 138              	.L8:
  61:Core/Src/Motor_Speed_pid.c ****     {
  62:Core/Src/Motor_Speed_pid.c ****         set_spdL = (2 * Vcx - Wc * C) / (2 * r) * 9.55 * 19.2;
  63:Core/Src/Motor_Speed_pid.c ****         set_spdR = (2 * Vcx + Wc * C) / (2 * r) * 9.55 * 19.2;
  64:Core/Src/Motor_Speed_pid.c **** 
  65:Core/Src/Motor_Speed_pid.c ****         if (set_spdL > MAX_SPEED_RPM) set_spdL = MAX_SPEED_RPM;
  66:Core/Src/Motor_Speed_pid.c ****         if (set_spdL < -MAX_SPEED_RPM) set_spdL = -MAX_SPEED_RPM; // limiting speed
  67:Core/Src/Motor_Speed_pid.c **** 
  68:Core/Src/Motor_Speed_pid.c ****         if (set_spdR > MAX_SPEED_RPM) set_spdR = MAX_SPEED_RPM;
  69:Core/Src/Motor_Speed_pid.c ****         if (set_spdR < -MAX_SPEED_RPM) set_spdR = -MAX_SPEED_RPM; 
  70:Core/Src/Motor_Speed_pid.c ****     }
  71:Core/Src/Motor_Speed_pid.c ****     else if (motor_shutdown == 0 && motor_ready == 0)
 139              		.loc 1 71 10 is_stmt 1 view .LVU32
 140              		.loc 1 71 13 is_stmt 0 view .LVU33
 141 0018 3BB9     		cbnz	r3, .L6
 142              		.loc 1 71 49 discriminator 1 view .LVU34
 143 001a 424B     		ldr	r3, .L22+20
 144 001c 1B68     		ldr	r3, [r3]
 145              		.loc 1 71 34 discriminator 1 view .LVU35
 146 001e 23B9     		cbnz	r3, .L6
  72:Core/Src/Motor_Speed_pid.c ****     {
  73:Core/Src/Motor_Speed_pid.c ****         set_spdL = 0;
 147              		.loc 1 73 9 is_stmt 1 view .LVU36
 148              		.loc 1 73 18 is_stmt 0 view .LVU37
 149 0020 0023     		movs	r3, #0
 150 0022 414A     		ldr	r2, .L22+24
 151 0024 1360     		str	r3, [r2]	@ float
  74:Core/Src/Motor_Speed_pid.c ****         set_spdR = 0;
 152              		.loc 1 74 9 is_stmt 1 view .LVU38
 153              		.loc 1 74 18 is_stmt 0 view .LVU39
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 5


 154 0026 414A     		ldr	r2, .L22+28
 155 0028 1360     		str	r3, [r2]	@ float
  75:Core/Src/Motor_Speed_pid.c ****     }
  76:Core/Src/Motor_Speed_pid.c ****     else
  77:Core/Src/Motor_Speed_pid.c ****     {
  78:Core/Src/Motor_Speed_pid.c ****         Set_free;
 156              		.loc 1 78 9 is_stmt 1 view .LVU40
 157              	.L6:
  79:Core/Src/Motor_Speed_pid.c ****     }
  80:Core/Src/Motor_Speed_pid.c **** }
 158              		.loc 1 80 1 is_stmt 0 view .LVU41
 159 002a BDEC048B 		vldm	sp!, {d8-d9}
 160              	.LCFI2:
 161              		.cfi_remember_state
 162              		.cfi_restore 82
 163              		.cfi_restore 83
 164              		.cfi_restore 80
 165              		.cfi_restore 81
 166              		.cfi_def_cfa_offset 8
 167 002e 08BD     		pop	{r3, pc}
 168              	.L21:
 169              	.LCFI3:
 170              		.cfi_restore_state
  62:Core/Src/Motor_Speed_pid.c ****         set_spdR = (2 * Vcx + Wc * C) / (2 * r) * 9.55 * 19.2;
 171              		.loc 1 62 9 is_stmt 1 view .LVU42
  62:Core/Src/Motor_Speed_pid.c ****         set_spdR = (2 * Vcx + Wc * C) / (2 * r) * 9.55 * 19.2;
 172              		.loc 1 62 23 is_stmt 0 view .LVU43
 173 0030 3F4B     		ldr	r3, .L22+32
 174 0032 93ED008A 		vldr.32	s16, [r3]
 175 0036 38EE088A 		vadd.f32	s16, s16, s16
  62:Core/Src/Motor_Speed_pid.c ****         set_spdR = (2 * Vcx + Wc * C) / (2 * r) * 9.55 * 19.2;
 176              		.loc 1 62 34 view .LVU44
 177 003a 3E4B     		ldr	r3, .L22+36
 178 003c D3ED009A 		vldr.32	s19, [r3]
 179 0040 3D4B     		ldr	r3, .L22+40
 180 0042 D3ED007A 		vldr.32	s15, [r3]
 181 0046 69EEA79A 		vmul.f32	s19, s19, s15
  62:Core/Src/Motor_Speed_pid.c ****         set_spdR = (2 * Vcx + Wc * C) / (2 * r) * 9.55 * 19.2;
 182              		.loc 1 62 29 view .LVU45
 183 004a 78EE697A 		vsub.f32	s15, s16, s19
  62:Core/Src/Motor_Speed_pid.c ****         set_spdR = (2 * Vcx + Wc * C) / (2 * r) * 9.55 * 19.2;
 184              		.loc 1 62 44 view .LVU46
 185 004e 3B4B     		ldr	r3, .L22+44
 186 0050 D3ED008A 		vldr.32	s17, [r3]
 187 0054 78EEA88A 		vadd.f32	s17, s17, s17
  62:Core/Src/Motor_Speed_pid.c ****         set_spdR = (2 * Vcx + Wc * C) / (2 * r) * 9.55 * 19.2;
 188              		.loc 1 62 39 view .LVU47
 189 0058 C7EEA87A 		vdiv.f32	s15, s15, s17
 190 005c 17EE900A 		vmov	r0, s15
 191 0060 FFF7FEFF 		bl	__aeabi_f2d
 192              	.LVL6:
  62:Core/Src/Motor_Speed_pid.c ****         set_spdR = (2 * Vcx + Wc * C) / (2 * r) * 9.55 * 19.2;
 193              		.loc 1 62 49 view .LVU48
 194 0064 2AA3     		adr	r3, .L22
 195 0066 D3E90023 		ldrd	r2, [r3]
 196 006a FFF7FEFF 		bl	__aeabi_dmul
 197              	.LVL7:
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 6


  62:Core/Src/Motor_Speed_pid.c ****         set_spdR = (2 * Vcx + Wc * C) / (2 * r) * 9.55 * 19.2;
 198              		.loc 1 62 56 view .LVU49
 199 006e 2AA3     		adr	r3, .L22+8
 200 0070 D3E90023 		ldrd	r2, [r3]
 201 0074 FFF7FEFF 		bl	__aeabi_dmul
 202              	.LVL8:
 203 0078 FFF7FEFF 		bl	__aeabi_d2f
 204              	.LVL9:
 205 007c 09EE100A 		vmov	s18, r0
  62:Core/Src/Motor_Speed_pid.c ****         set_spdR = (2 * Vcx + Wc * C) / (2 * r) * 9.55 * 19.2;
 206              		.loc 1 62 18 view .LVU50
 207 0080 294B     		ldr	r3, .L22+24
 208 0082 1860     		str	r0, [r3]	@ float
  63:Core/Src/Motor_Speed_pid.c **** 
 209              		.loc 1 63 9 is_stmt 1 view .LVU51
  63:Core/Src/Motor_Speed_pid.c **** 
 210              		.loc 1 63 29 is_stmt 0 view .LVU52
 211 0084 38EE298A 		vadd.f32	s16, s16, s19
  63:Core/Src/Motor_Speed_pid.c **** 
 212              		.loc 1 63 39 view .LVU53
 213 0088 C8EE287A 		vdiv.f32	s15, s16, s17
 214 008c 17EE900A 		vmov	r0, s15
 215 0090 FFF7FEFF 		bl	__aeabi_f2d
 216              	.LVL10:
  63:Core/Src/Motor_Speed_pid.c **** 
 217              		.loc 1 63 49 view .LVU54
 218 0094 1EA3     		adr	r3, .L22
 219 0096 D3E90023 		ldrd	r2, [r3]
 220 009a FFF7FEFF 		bl	__aeabi_dmul
 221              	.LVL11:
  63:Core/Src/Motor_Speed_pid.c **** 
 222              		.loc 1 63 56 view .LVU55
 223 009e 1EA3     		adr	r3, .L22+8
 224 00a0 D3E90023 		ldrd	r2, [r3]
 225 00a4 FFF7FEFF 		bl	__aeabi_dmul
 226              	.LVL12:
 227 00a8 FFF7FEFF 		bl	__aeabi_d2f
 228              	.LVL13:
 229 00ac 07EE900A 		vmov	s15, r0
  63:Core/Src/Motor_Speed_pid.c **** 
 230              		.loc 1 63 18 view .LVU56
 231 00b0 1E4B     		ldr	r3, .L22+28
 232 00b2 1860     		str	r0, [r3]	@ float
  65:Core/Src/Motor_Speed_pid.c ****         if (set_spdL < -MAX_SPEED_RPM) set_spdL = -MAX_SPEED_RPM; // limiting speed
 233              		.loc 1 65 9 is_stmt 1 view .LVU57
  65:Core/Src/Motor_Speed_pid.c ****         if (set_spdL < -MAX_SPEED_RPM) set_spdL = -MAX_SPEED_RPM; // limiting speed
 234              		.loc 1 65 12 is_stmt 0 view .LVU58
 235 00b4 9FED227A 		vldr.32	s14, .L22+48
 236 00b8 B4EEC79A 		vcmpe.f32	s18, s14
 237 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 238 00c0 02DD     		ble	.L9
  65:Core/Src/Motor_Speed_pid.c ****         if (set_spdL < -MAX_SPEED_RPM) set_spdL = -MAX_SPEED_RPM; // limiting speed
 239              		.loc 1 65 39 is_stmt 1 discriminator 1 view .LVU59
  65:Core/Src/Motor_Speed_pid.c ****         if (set_spdL < -MAX_SPEED_RPM) set_spdL = -MAX_SPEED_RPM; // limiting speed
 240              		.loc 1 65 48 is_stmt 0 discriminator 1 view .LVU60
 241 00c2 194B     		ldr	r3, .L22+24
 242 00c4 83ED007A 		vstr.32	s14, [r3]
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 7


 243              	.L9:
  66:Core/Src/Motor_Speed_pid.c **** 
 244              		.loc 1 66 9 is_stmt 1 view .LVU61
  66:Core/Src/Motor_Speed_pid.c **** 
 245              		.loc 1 66 22 is_stmt 0 view .LVU62
 246 00c8 174B     		ldr	r3, .L22+24
 247 00ca D3ED006A 		vldr.32	s13, [r3]
  66:Core/Src/Motor_Speed_pid.c **** 
 248              		.loc 1 66 12 view .LVU63
 249 00ce 9FED1D7A 		vldr.32	s14, .L22+52
 250 00d2 F4EEC76A 		vcmpe.f32	s13, s14
 251 00d6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 252 00da 01D5     		bpl	.L11
  66:Core/Src/Motor_Speed_pid.c **** 
 253              		.loc 1 66 40 is_stmt 1 discriminator 1 view .LVU64
  66:Core/Src/Motor_Speed_pid.c **** 
 254              		.loc 1 66 49 is_stmt 0 discriminator 1 view .LVU65
 255 00dc 83ED007A 		vstr.32	s14, [r3]
 256              	.L11:
  68:Core/Src/Motor_Speed_pid.c ****         if (set_spdR < -MAX_SPEED_RPM) set_spdR = -MAX_SPEED_RPM; 
 257              		.loc 1 68 9 is_stmt 1 view .LVU66
  68:Core/Src/Motor_Speed_pid.c ****         if (set_spdR < -MAX_SPEED_RPM) set_spdR = -MAX_SPEED_RPM; 
 258              		.loc 1 68 12 is_stmt 0 view .LVU67
 259 00e0 9FED177A 		vldr.32	s14, .L22+48
 260 00e4 F4EEC77A 		vcmpe.f32	s15, s14
 261 00e8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 262 00ec 02DD     		ble	.L13
  68:Core/Src/Motor_Speed_pid.c ****         if (set_spdR < -MAX_SPEED_RPM) set_spdR = -MAX_SPEED_RPM; 
 263              		.loc 1 68 39 is_stmt 1 discriminator 1 view .LVU68
  68:Core/Src/Motor_Speed_pid.c ****         if (set_spdR < -MAX_SPEED_RPM) set_spdR = -MAX_SPEED_RPM; 
 264              		.loc 1 68 48 is_stmt 0 discriminator 1 view .LVU69
 265 00ee 0F4B     		ldr	r3, .L22+28
 266 00f0 83ED007A 		vstr.32	s14, [r3]
 267              	.L13:
  69:Core/Src/Motor_Speed_pid.c ****     }
 268              		.loc 1 69 9 is_stmt 1 view .LVU70
  69:Core/Src/Motor_Speed_pid.c ****     }
 269              		.loc 1 69 22 is_stmt 0 view .LVU71
 270 00f4 0D4B     		ldr	r3, .L22+28
 271 00f6 93ED007A 		vldr.32	s14, [r3]
  69:Core/Src/Motor_Speed_pid.c ****     }
 272              		.loc 1 69 12 view .LVU72
 273 00fa DFED127A 		vldr.32	s15, .L22+52
 274 00fe B4EEE77A 		vcmpe.f32	s14, s15
 275 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 276 0106 90D5     		bpl	.L6
  69:Core/Src/Motor_Speed_pid.c ****     }
 277              		.loc 1 69 40 is_stmt 1 discriminator 1 view .LVU73
  69:Core/Src/Motor_Speed_pid.c ****     }
 278              		.loc 1 69 49 is_stmt 0 discriminator 1 view .LVU74
 279 0108 C3ED007A 		vstr.32	s15, [r3]
 280 010c 8DE7     		b	.L6
 281              	.L23:
 282 010e 00BF     		.align	3
 283              	.L22:
 284 0110 9A999999 		.word	-1717986918
 285 0114 99192340 		.word	1076042137
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 8


 286 0118 33333333 		.word	858993459
 287 011c 33333340 		.word	1077097267
 288 0120 00000000 		.word	motor_shutdown
 289 0124 00000000 		.word	motor_ready
 290 0128 00000000 		.word	set_spdL
 291 012c 00000000 		.word	set_spdR
 292 0130 00000000 		.word	Vcx
 293 0134 00000000 		.word	Wc
 294 0138 00000000 		.word	C
 295 013c 00000000 		.word	r
 296 0140 00409C46 		.word	1184645120
 297 0144 00409CC6 		.word	-962838528
 298              		.cfi_endproc
 299              	.LFE163:
 301              		.section	.text.Motor_Speed_pid_init,"ax",%progbits
 302              		.align	1
 303              		.global	Motor_Speed_pid_init
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 308              	Motor_Speed_pid_init:
 309              	.LFB164:
  81:Core/Src/Motor_Speed_pid.c **** 
  82:Core/Src/Motor_Speed_pid.c **** 
  83:Core/Src/Motor_Speed_pid.c **** 
  84:Core/Src/Motor_Speed_pid.c **** // void Motor_Speed_pid_init()  //static void pid_param_init(PID_TypeDef * pid, PID_ID   id,uint16_
  85:Core/Src/Motor_Speed_pid.c **** // {
  86:Core/Src/Motor_Speed_pid.c **** //   for(int i=0; i<4; i++)
  87:Core/Src/Motor_Speed_pid.c **** //   {	
  88:Core/Src/Motor_Speed_pid.c **** //     pid_init(&motor_pid[i]);
  89:Core/Src/Motor_Speed_pid.c **** //     motor_pid[i].f_param_init(&motor_pid[i],PID_Speed,10000,10000,0,0,8000,0,10,3.2832,0);  
  90:Core/Src/Motor_Speed_pid.c **** //   }
  91:Core/Src/Motor_Speed_pid.c **** // }
  92:Core/Src/Motor_Speed_pid.c **** 
  93:Core/Src/Motor_Speed_pid.c **** void Motor_Speed_pid_init()
  94:Core/Src/Motor_Speed_pid.c **** {
 310              		.loc 1 94 1 is_stmt 1 view -0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314 0000 70B5     		push	{r4, r5, r6, lr}
 315              	.LCFI4:
 316              		.cfi_def_cfa_offset 16
 317              		.cfi_offset 4, -16
 318              		.cfi_offset 5, -12
 319              		.cfi_offset 6, -8
 320              		.cfi_offset 14, -4
 321 0002 84B0     		sub	sp, sp, #16
 322              	.LCFI5:
 323              		.cfi_def_cfa_offset 32
  95:Core/Src/Motor_Speed_pid.c ****     for (int i = 0; i < 4; i++)
 324              		.loc 1 95 5 view .LVU76
 325              	.LBB2:
 326              		.loc 1 95 10 view .LVU77
 327              	.LVL14:
 328              		.loc 1 95 14 is_stmt 0 view .LVU78
 329 0004 0025     		movs	r5, #0
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 9


 330              		.loc 1 95 5 view .LVU79
 331 0006 1BE0     		b	.L25
 332              	.LVL15:
 333              	.L26:
  96:Core/Src/Motor_Speed_pid.c ****     {
  97:Core/Src/Motor_Speed_pid.c ****         pid_init(&motor_pid[i]);
 334              		.loc 1 97 9 is_stmt 1 view .LVU80
 335 0008 6823     		movs	r3, #104
 336 000a 0F4C     		ldr	r4, .L28
 337 000c 03FB0544 		mla	r4, r3, r5, r4
 338 0010 2046     		mov	r0, r4
 339 0012 FFF7FEFF 		bl	pid_init
 340              	.LVL16:
  98:Core/Src/Motor_Speed_pid.c ****         
  99:Core/Src/Motor_Speed_pid.c ****         // Adjust PID parameters
 100:Core/Src/Motor_Speed_pid.c ****     //     motor_pid[i].f_param_init(&motor_pid[i], PID_Speed, 
 101:Core/Src/Motor_Speed_pid.c ****     //                               5000,     // Kp: Proportional gain
 102:Core/Src/Motor_Speed_pid.c ****     //                               5000,     // Ki: Integral gain, moderate adjustment
 103:Core/Src/Motor_Speed_pid.c ****     //                               0,        // Ki limit set to 0 or a small value
 104:Core/Src/Motor_Speed_pid.c ****     //                               0,        // Derivative saturation limit
 105:Core/Src/Motor_Speed_pid.c ****     //                               4000,     // Limit for the integral value
 106:Core/Src/Motor_Speed_pid.c ****     //                               0,        // Set target to 0
 107:Core/Src/Motor_Speed_pid.c ****     //                               10,       // Sampling time
 108:Core/Src/Motor_Speed_pid.c ****     //                               2,        // Kd: Derivative gain, increased derivative gain
 109:Core/Src/Motor_Speed_pid.c ****     //                               0);       // Additional gain for fine-tuning
 110:Core/Src/Motor_Speed_pid.c ****     // }
 111:Core/Src/Motor_Speed_pid.c **** 
 112:Core/Src/Motor_Speed_pid.c ****         motor_pid[i].f_param_init(&motor_pid[i], PID_Speed, 
 341              		.loc 1 112 9 view .LVU81
 342              		.loc 1 112 21 is_stmt 0 view .LVU82
 343 0016 E66D     		ldr	r6, [r4, #92]
 344              		.loc 1 112 9 view .LVU83
 345 0018 9FED0C0A 		vldr.32	s0, .L28+4
 346 001c 0022     		movs	r2, #0
 347 001e 0292     		str	r2, [sp, #8]
 348 0020 4FF47A73 		mov	r3, #1000
 349 0024 0193     		str	r3, [sp, #4]
 350 0026 0092     		str	r2, [sp]
 351 0028 F0EE401A 		vmov.f32	s3, s0
 352 002c 9FED081A 		vldr.32	s2, .L28+8
 353 0030 F2EE040A 		vmov.f32	s1, #1.0e+1
 354 0034 43F69822 		movw	r2, #15000
 355 0038 0121     		movs	r1, #1
 356 003a 2046     		mov	r0, r4
 357 003c B047     		blx	r6
 358              	.LVL17:
  95:Core/Src/Motor_Speed_pid.c ****     {
 359              		.loc 1 95 29 is_stmt 1 discriminator 3 view .LVU84
 360 003e 0135     		adds	r5, r5, #1
 361              	.LVL18:
 362              	.L25:
  95:Core/Src/Motor_Speed_pid.c ****     {
 363              		.loc 1 95 23 discriminator 1 view .LVU85
 364 0040 032D     		cmp	r5, #3
 365 0042 E1DD     		ble	.L26
 366              	.LBE2:
 113:Core/Src/Motor_Speed_pid.c ****             15000,     // Kp: Proportional gain
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 10


 114:Core/Src/Motor_Speed_pid.c ****             1000,     // Ki: Integral gain, moderate adjustment
 115:Core/Src/Motor_Speed_pid.c ****             0,        // Ki limit set to 0 or a small value
 116:Core/Src/Motor_Speed_pid.c ****             0,        // Derivative saturation limit
 117:Core/Src/Motor_Speed_pid.c ****             1000,     // Limit for the integral value
 118:Core/Src/Motor_Speed_pid.c ****             0,        // Set target to 0
 119:Core/Src/Motor_Speed_pid.c ****             10,       // Sampling time
 120:Core/Src/Motor_Speed_pid.c ****             100,        // Kd: Derivative gain, increased derivative gain
 121:Core/Src/Motor_Speed_pid.c ****             0);       // Additional gain for fine-tuning
 122:Core/Src/Motor_Speed_pid.c ****     }
 123:Core/Src/Motor_Speed_pid.c **** 
 124:Core/Src/Motor_Speed_pid.c **** }
 367              		.loc 1 124 1 is_stmt 0 view .LVU86
 368 0044 04B0     		add	sp, sp, #16
 369              	.LCFI6:
 370              		.cfi_def_cfa_offset 16
 371              		@ sp needed
 372 0046 70BD     		pop	{r4, r5, r6, pc}
 373              	.LVL19:
 374              	.L29:
 375              		.loc 1 124 1 view .LVU87
 376              		.align	2
 377              	.L28:
 378 0048 00000000 		.word	motor_pid
 379 004c 00000000 		.word	0
 380 0050 0000C842 		.word	1120403456
 381              		.cfi_endproc
 382              	.LFE164:
 384              		.section	.text.Set_free,"ax",%progbits
 385              		.align	1
 386              		.global	Set_free
 387              		.syntax unified
 388              		.thumb
 389              		.thumb_func
 391              	Set_free:
 392              	.LFB165:
 125:Core/Src/Motor_Speed_pid.c **** 
 126:Core/Src/Motor_Speed_pid.c **** 
 127:Core/Src/Motor_Speed_pid.c **** void Set_free()
 128:Core/Src/Motor_Speed_pid.c **** {
 393              		.loc 1 128 1 is_stmt 1 view -0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397 0000 08B5     		push	{r3, lr}
 398              	.LCFI7:
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 3, -8
 401              		.cfi_offset 14, -4
 129:Core/Src/Motor_Speed_pid.c **** 	CAN_cmd_chassis(0,0,0,0);
 402              		.loc 1 129 2 view .LVU89
 403 0002 0023     		movs	r3, #0
 404 0004 1A46     		mov	r2, r3
 405 0006 1946     		mov	r1, r3
 406 0008 1846     		mov	r0, r3
 407 000a FFF7FEFF 		bl	CAN_cmd_chassis
 408              	.LVL20:
 130:Core/Src/Motor_Speed_pid.c **** 	for(int i=0; i<4; i++)
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 11


 409              		.loc 1 130 2 view .LVU90
 410              	.LBB3:
 411              		.loc 1 130 6 view .LVU91
 412              		.loc 1 130 10 is_stmt 0 view .LVU92
 413 000e 0022     		movs	r2, #0
 414              		.loc 1 130 2 view .LVU93
 415 0010 08E0     		b	.L31
 416              	.LVL21:
 417              	.L32:
 131:Core/Src/Motor_Speed_pid.c **** 	{
 132:Core/Src/Motor_Speed_pid.c **** 		motor_pid[i].iout = 0;
 418              		.loc 1 132 3 is_stmt 1 view .LVU94
 419              		.loc 1 132 21 is_stmt 0 view .LVU95
 420 0012 064B     		ldr	r3, .L34
 421 0014 6821     		movs	r1, #104
 422 0016 01FB0233 		mla	r3, r1, r2, r3
 423 001a 0021     		movs	r1, #0
 424 001c 9962     		str	r1, [r3, #40]	@ float
 133:Core/Src/Motor_Speed_pid.c **** 		motor_pid[i].output = 0;
 425              		.loc 1 133 3 is_stmt 1 view .LVU96
 426              		.loc 1 133 23 is_stmt 0 view .LVU97
 427 001e 1963     		str	r1, [r3, #48]	@ float
 134:Core/Src/Motor_Speed_pid.c **** 		motor_pid[i].calculate_output = 0;
 428              		.loc 1 134 3 is_stmt 1 view .LVU98
 429              		.loc 1 134 33 is_stmt 0 view .LVU99
 430 0020 9963     		str	r1, [r3, #56]	@ float
 130:Core/Src/Motor_Speed_pid.c **** 	{
 431              		.loc 1 130 21 is_stmt 1 discriminator 3 view .LVU100
 432 0022 0132     		adds	r2, r2, #1
 433              	.LVL22:
 434              	.L31:
 130:Core/Src/Motor_Speed_pid.c **** 	{
 435              		.loc 1 130 16 discriminator 1 view .LVU101
 436 0024 032A     		cmp	r2, #3
 437 0026 F4DD     		ble	.L32
 438              	.LBE3:
 135:Core/Src/Motor_Speed_pid.c **** 	}
 136:Core/Src/Motor_Speed_pid.c **** 	
 137:Core/Src/Motor_Speed_pid.c **** }
 439              		.loc 1 137 1 is_stmt 0 view .LVU102
 440 0028 08BD     		pop	{r3, pc}
 441              	.L35:
 442 002a 00BF     		.align	2
 443              	.L34:
 444 002c 00000000 		.word	motor_pid
 445              		.cfi_endproc
 446              	.LFE165:
 448              		.section	.text.Speed_set,"ax",%progbits
 449              		.align	1
 450              		.global	Speed_set
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 455              	Speed_set:
 456              	.LFB166:
 138:Core/Src/Motor_Speed_pid.c **** 
 139:Core/Src/Motor_Speed_pid.c **** void Speed_set()
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 12


 140:Core/Src/Motor_Speed_pid.c **** {
 457              		.loc 1 140 1 is_stmt 1 view -0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461 0000 10B5     		push	{r4, lr}
 462              	.LCFI8:
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 4, -8
 465              		.cfi_offset 14, -4
 141:Core/Src/Motor_Speed_pid.c ****     if(free_flag == 0)
 466              		.loc 1 141 5 view .LVU104
 467              		.loc 1 141 18 is_stmt 0 view .LVU105
 468 0002 244B     		ldr	r3, .L42
 469 0004 1C68     		ldr	r4, [r3]
 470              		.loc 1 141 7 view .LVU106
 471 0006 04B1     		cbz	r4, .L41
 472              	.L36:
 142:Core/Src/Motor_Speed_pid.c ****     {
 143:Core/Src/Motor_Speed_pid.c ****         Motor_Speed_Calc();
 144:Core/Src/Motor_Speed_pid.c ****                 motor_pid[0].target = set_spdL;
 145:Core/Src/Motor_Speed_pid.c ****                 motor_pid[1].target = set_spdL;
 146:Core/Src/Motor_Speed_pid.c ****                 motor_pid[2].target = -set_spdR;
 147:Core/Src/Motor_Speed_pid.c ****                 motor_pid[3].target = -set_spdR;
 148:Core/Src/Motor_Speed_pid.c ****                 for(int i=0; i<4; i++)
 149:Core/Src/Motor_Speed_pid.c ****                 {
 150:Core/Src/Motor_Speed_pid.c ****                     motor_pid[i].f_cal_pid(&motor_pid[i],motor_chassis[i].speed_rpm);
 151:Core/Src/Motor_Speed_pid.c ****                 }
 152:Core/Src/Motor_Speed_pid.c **** 
 153:Core/Src/Motor_Speed_pid.c ****                 CAN_cmd_chassis(motor_pid[0].output,
 154:Core/Src/Motor_Speed_pid.c ****                                 motor_pid[1].output,
 155:Core/Src/Motor_Speed_pid.c ****                                 motor_pid[2].output,
 156:Core/Src/Motor_Speed_pid.c ****                                 motor_pid[3].output);
 157:Core/Src/Motor_Speed_pid.c ****     }
 158:Core/Src/Motor_Speed_pid.c **** 
 159:Core/Src/Motor_Speed_pid.c ****     if(free_flag == 1)
 160:Core/Src/Motor_Speed_pid.c ****     {
 161:Core/Src/Motor_Speed_pid.c ****     Set_free;
 162:Core/Src/Motor_Speed_pid.c ****     }
 163:Core/Src/Motor_Speed_pid.c **** 
 164:Core/Src/Motor_Speed_pid.c ****     
 165:Core/Src/Motor_Speed_pid.c **** 
 166:Core/Src/Motor_Speed_pid.c ****     // if((motor_ready == 1) || (control_mode == 1))
 167:Core/Src/Motor_Speed_pid.c ****     // {
 168:Core/Src/Motor_Speed_pid.c ****     //     // usart_printf("motor ready or control_mode == 1\n");
 169:Core/Src/Motor_Speed_pid.c **** 
 170:Core/Src/Motor_Speed_pid.c ****     //     if(motor_shutdown == 0)//电机活动
 171:Core/Src/Motor_Speed_pid.c ****     //     {
 172:Core/Src/Motor_Speed_pid.c ****     //         if(control_mode == 0) // 手柄控制模式
 173:Core/Src/Motor_Speed_pid.c ****     //         {
 174:Core/Src/Motor_Speed_pid.c ****     //             if((PS2_LY < 133) && (PS2_LY > 123) && (PS2_RX < 130) && (PS2_RX > 124))
 175:Core/Src/Motor_Speed_pid.c ****     //             {
 176:Core/Src/Motor_Speed_pid.c ****     //                 // Set_free(); //自由滑动
 177:Core/Src/Motor_Speed_pid.c ****     //                 // free_flag = 0;// 不允许自由滑动
 178:Core/Src/Motor_Speed_pid.c ****     //             }
 179:Core/Src/Motor_Speed_pid.c ****     //             else
 180:Core/Src/Motor_Speed_pid.c ****     //             {
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 13


 181:Core/Src/Motor_Speed_pid.c ****     //                 // free_flag = 0;
 182:Core/Src/Motor_Speed_pid.c ****     //             }
 183:Core/Src/Motor_Speed_pid.c ****     //         }
 184:Core/Src/Motor_Speed_pid.c **** 
 185:Core/Src/Motor_Speed_pid.c ****     //         else if(control_mode == 1) // 串口控制模式
 186:Core/Src/Motor_Speed_pid.c ****     //         {
 187:Core/Src/Motor_Speed_pid.c ****     //             // Motor_Speed_Calc(); // 使用Vcx和Wc的串口输入
 188:Core/Src/Motor_Speed_pid.c ****     //             free_flag = 0; // 不允许自由滑动
 189:Core/Src/Motor_Speed_pid.c ****     //         }
 190:Core/Src/Motor_Speed_pid.c **** 
 191:Core/Src/Motor_Speed_pid.c ****     //         if(free_flag == 0)
 192:Core/Src/Motor_Speed_pid.c ****     //         {
 193:Core/Src/Motor_Speed_pid.c **** 	// 			Motor_Speed_Calc();
 194:Core/Src/Motor_Speed_pid.c ****     //             motor_pid[0].target = set_spdL;
 195:Core/Src/Motor_Speed_pid.c ****     //             motor_pid[1].target = set_spdL;
 196:Core/Src/Motor_Speed_pid.c ****     //             motor_pid[2].target = -set_spdR;
 197:Core/Src/Motor_Speed_pid.c ****     //             motor_pid[3].target = -set_spdR;
 198:Core/Src/Motor_Speed_pid.c ****     //             for(int i=0; i<4; i++)
 199:Core/Src/Motor_Speed_pid.c ****     //             {
 200:Core/Src/Motor_Speed_pid.c ****     //                 motor_pid[i].f_cal_pid(&motor_pid[i],motor_chassis[i].speed_rpm);
 201:Core/Src/Motor_Speed_pid.c ****     //             }
 202:Core/Src/Motor_Speed_pid.c **** 
 203:Core/Src/Motor_Speed_pid.c ****     //             CAN_cmd_chassis(motor_pid[0].output,
 204:Core/Src/Motor_Speed_pid.c ****     //                             motor_pid[1].output,
 205:Core/Src/Motor_Speed_pid.c ****     //                             motor_pid[2].output,
 206:Core/Src/Motor_Speed_pid.c ****     //                             motor_pid[3].output);
 207:Core/Src/Motor_Speed_pid.c ****     //         }
 208:Core/Src/Motor_Speed_pid.c **** 
 209:Core/Src/Motor_Speed_pid.c ****     //         else if(free_flag == 1)//允许自由滑动
 210:Core/Src/Motor_Speed_pid.c ****     //         {
 211:Core/Src/Motor_Speed_pid.c ****     //             Set_free;
 212:Core/Src/Motor_Speed_pid.c ****     //         }
 213:Core/Src/Motor_Speed_pid.c ****     //     }
 214:Core/Src/Motor_Speed_pid.c ****     //     else
 215:Core/Src/Motor_Speed_pid.c ****     //     {
 216:Core/Src/Motor_Speed_pid.c ****     //         Set_free;
 217:Core/Src/Motor_Speed_pid.c ****     //     }
 218:Core/Src/Motor_Speed_pid.c ****     // }
 219:Core/Src/Motor_Speed_pid.c **** 
 220:Core/Src/Motor_Speed_pid.c ****     // if(motor_ready == 0)
 221:Core/Src/Motor_Speed_pid.c ****     // {
 222:Core/Src/Motor_Speed_pid.c ****     //     if(free_flag == 0)
 223:Core/Src/Motor_Speed_pid.c ****     //     {
 224:Core/Src/Motor_Speed_pid.c ****     //         Motor_Speed_Calc();
 225:Core/Src/Motor_Speed_pid.c ****     //         motor_pid[0].target = set_spdL;
 226:Core/Src/Motor_Speed_pid.c ****     //         motor_pid[1].target = set_spdL;
 227:Core/Src/Motor_Speed_pid.c ****     //         motor_pid[2].target = -set_spdR;
 228:Core/Src/Motor_Speed_pid.c ****     //         motor_pid[3].target = -set_spdR;
 229:Core/Src/Motor_Speed_pid.c ****     //         for(int i=0; i<4; i++)
 230:Core/Src/Motor_Speed_pid.c ****     //         {
 231:Core/Src/Motor_Speed_pid.c ****     //             motor_pid[i].f_cal_pid(&motor_pid[i],motor_chassis[i].speed_rpm);
 232:Core/Src/Motor_Speed_pid.c ****     //         }
 233:Core/Src/Motor_Speed_pid.c **** 
 234:Core/Src/Motor_Speed_pid.c ****     //         CAN_cmd_chassis(motor_pid[0].output,
 235:Core/Src/Motor_Speed_pid.c ****     //                         motor_pid[1].output,
 236:Core/Src/Motor_Speed_pid.c ****     //                         motor_pid[2].output,
 237:Core/Src/Motor_Speed_pid.c ****     //                         motor_pid[3].output);
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 14


 238:Core/Src/Motor_Speed_pid.c ****     //     }
 239:Core/Src/Motor_Speed_pid.c ****     //     else
 240:Core/Src/Motor_Speed_pid.c ****     //     {
 241:Core/Src/Motor_Speed_pid.c ****     //         Set_free;
 242:Core/Src/Motor_Speed_pid.c ****     //     }
 243:Core/Src/Motor_Speed_pid.c ****     // }
 244:Core/Src/Motor_Speed_pid.c **** }
 473              		.loc 1 244 1 view .LVU107
 474 0008 10BD     		pop	{r4, pc}
 475              	.L41:
 143:Core/Src/Motor_Speed_pid.c ****                 motor_pid[0].target = set_spdL;
 476              		.loc 1 143 9 is_stmt 1 view .LVU108
 477 000a FFF7FEFF 		bl	Motor_Speed_Calc
 478              	.LVL23:
 144:Core/Src/Motor_Speed_pid.c ****                 motor_pid[1].target = set_spdL;
 479              		.loc 1 144 17 view .LVU109
 144:Core/Src/Motor_Speed_pid.c ****                 motor_pid[1].target = set_spdL;
 480              		.loc 1 144 37 is_stmt 0 view .LVU110
 481 000e 224B     		ldr	r3, .L42+4
 482 0010 1A68     		ldr	r2, [r3]	@ float
 483 0012 224B     		ldr	r3, .L42+8
 484 0014 5A60     		str	r2, [r3, #4]	@ float
 145:Core/Src/Motor_Speed_pid.c ****                 motor_pid[2].target = -set_spdR;
 485              		.loc 1 145 17 is_stmt 1 view .LVU111
 145:Core/Src/Motor_Speed_pid.c ****                 motor_pid[2].target = -set_spdR;
 486              		.loc 1 145 37 is_stmt 0 view .LVU112
 487 0016 DA66     		str	r2, [r3, #108]	@ float
 146:Core/Src/Motor_Speed_pid.c ****                 motor_pid[3].target = -set_spdR;
 488              		.loc 1 146 17 is_stmt 1 view .LVU113
 146:Core/Src/Motor_Speed_pid.c ****                 motor_pid[3].target = -set_spdR;
 489              		.loc 1 146 39 is_stmt 0 view .LVU114
 490 0018 214A     		ldr	r2, .L42+12
 491 001a D2ED007A 		vldr.32	s15, [r2]
 492 001e F1EE677A 		vneg.f32	s15, s15
 146:Core/Src/Motor_Speed_pid.c ****                 motor_pid[3].target = -set_spdR;
 493              		.loc 1 146 37 view .LVU115
 494 0022 C3ED357A 		vstr.32	s15, [r3, #212]
 147:Core/Src/Motor_Speed_pid.c ****                 for(int i=0; i<4; i++)
 495              		.loc 1 147 17 is_stmt 1 view .LVU116
 147:Core/Src/Motor_Speed_pid.c ****                 for(int i=0; i<4; i++)
 496              		.loc 1 147 37 is_stmt 0 view .LVU117
 497 0026 C3ED4F7A 		vstr.32	s15, [r3, #316]
 148:Core/Src/Motor_Speed_pid.c ****                 {
 498              		.loc 1 148 17 is_stmt 1 view .LVU118
 499              	.LBB4:
 148:Core/Src/Motor_Speed_pid.c ****                 {
 500              		.loc 1 148 21 view .LVU119
 501              	.LVL24:
 148:Core/Src/Motor_Speed_pid.c ****                 {
 502              		.loc 1 148 17 is_stmt 0 view .LVU120
 503 002a 11E0     		b	.L38
 504              	.LVL25:
 505              	.L39:
 150:Core/Src/Motor_Speed_pid.c ****                 }
 506              		.loc 1 150 21 is_stmt 1 view .LVU121
 150:Core/Src/Motor_Speed_pid.c ****                 }
 507              		.loc 1 150 33 is_stmt 0 view .LVU122
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 15


 508 002c 1B48     		ldr	r0, .L42+8
 509 002e 6823     		movs	r3, #104
 510 0030 03FB0400 		mla	r0, r3, r4, r0
 511 0034 416E     		ldr	r1, [r0, #100]
 150:Core/Src/Motor_Speed_pid.c ****                 }
 512              		.loc 1 150 74 view .LVU123
 513 0036 04EB8403 		add	r3, r4, r4, lsl #2
 514 003a 5A00     		lsls	r2, r3, #1
 515 003c 194B     		ldr	r3, .L42+16
 516 003e 1344     		add	r3, r3, r2
 517 0040 B3F90230 		ldrsh	r3, [r3, #2]
 518 0044 00EE103A 		vmov	s0, r3	@ int
 150:Core/Src/Motor_Speed_pid.c ****                 }
 519              		.loc 1 150 21 view .LVU124
 520 0048 B8EEC00A 		vcvt.f32.s32	s0, s0
 521 004c 8847     		blx	r1
 522              	.LVL26:
 148:Core/Src/Motor_Speed_pid.c ****                 {
 523              		.loc 1 148 36 is_stmt 1 discriminator 3 view .LVU125
 524 004e 0134     		adds	r4, r4, #1
 525              	.LVL27:
 526              	.L38:
 148:Core/Src/Motor_Speed_pid.c ****                 {
 527              		.loc 1 148 31 discriminator 1 view .LVU126
 528 0050 032C     		cmp	r4, #3
 529 0052 EBDD     		ble	.L39
 530              	.LBE4:
 153:Core/Src/Motor_Speed_pid.c ****                                 motor_pid[1].output,
 531              		.loc 1 153 17 view .LVU127
 153:Core/Src/Motor_Speed_pid.c ****                                 motor_pid[1].output,
 532              		.loc 1 153 45 is_stmt 0 view .LVU128
 533 0054 114B     		ldr	r3, .L42+8
 534 0056 D3ED0C7A 		vldr.32	s15, [r3, #48]
 154:Core/Src/Motor_Speed_pid.c ****                                 motor_pid[2].output,
 535              		.loc 1 154 45 view .LVU129
 536 005a 93ED267A 		vldr.32	s14, [r3, #152]
 155:Core/Src/Motor_Speed_pid.c ****                                 motor_pid[3].output);
 537              		.loc 1 155 45 view .LVU130
 538 005e D3ED406A 		vldr.32	s13, [r3, #256]
 156:Core/Src/Motor_Speed_pid.c ****     }
 539              		.loc 1 156 45 view .LVU131
 540 0062 93ED5A6A 		vldr.32	s12, [r3, #360]
 153:Core/Src/Motor_Speed_pid.c ****                                 motor_pid[1].output,
 541              		.loc 1 153 17 view .LVU132
 542 0066 BDEEC66A 		vcvt.s32.f32	s12, s12
 543 006a FDEEE66A 		vcvt.s32.f32	s13, s13
 544 006e BDEEC77A 		vcvt.s32.f32	s14, s14
 545 0072 FDEEE77A 		vcvt.s32.f32	s15, s15
 546 0076 16EE103A 		vmov	r3, s12	@ int
 547 007a 1BB2     		sxth	r3, r3
 548 007c 16EE902A 		vmov	r2, s13	@ int
 549 0080 12B2     		sxth	r2, r2
 550 0082 17EE101A 		vmov	r1, s14	@ int
 551 0086 09B2     		sxth	r1, r1
 552 0088 17EE900A 		vmov	r0, s15	@ int
 553 008c 00B2     		sxth	r0, r0
 554 008e FFF7FEFF 		bl	CAN_cmd_chassis
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 16


 555              	.LVL28:
 159:Core/Src/Motor_Speed_pid.c ****     {
 556              		.loc 1 159 5 is_stmt 1 view .LVU133
 161:Core/Src/Motor_Speed_pid.c ****     }
 557              		.loc 1 161 5 view .LVU134
 558              		.loc 1 244 1 is_stmt 0 view .LVU135
 559 0092 B9E7     		b	.L36
 560              	.L43:
 561              		.align	2
 562              	.L42:
 563 0094 00000000 		.word	free_flag
 564 0098 00000000 		.word	set_spdL
 565 009c 00000000 		.word	motor_pid
 566 00a0 00000000 		.word	set_spdR
 567 00a4 00000000 		.word	motor_chassis
 568              		.cfi_endproc
 569              	.LFE166:
 571              		.global	__aeabi_dadd
 572              		.section	.text.MOTORrpm2vw,"ax",%progbits
 573              		.align	1
 574              		.global	MOTORrpm2vw
 575              		.syntax unified
 576              		.thumb
 577              		.thumb_func
 579              	MOTORrpm2vw:
 580              	.LVL29:
 581              	.LFB167:
 245:Core/Src/Motor_Speed_pid.c **** 
 246:Core/Src/Motor_Speed_pid.c **** 
 247:Core/Src/Motor_Speed_pid.c **** 
 248:Core/Src/Motor_Speed_pid.c **** //Using motor_speed(rpm) to calculate the velocity(m/s) and angular velocity(rad/s) of the car
 249:Core/Src/Motor_Speed_pid.c **** void MOTORrpm2vw(float left_motor_speed,float right_motor_speed,float *vcx,float*w)
 250:Core/Src/Motor_Speed_pid.c **** {
 582              		.loc 1 250 1 is_stmt 1 view -0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 0
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586              		.loc 1 250 1 is_stmt 0 view .LVU137
 587 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 588              	.LCFI9:
 589              		.cfi_def_cfa_offset 24
 590              		.cfi_offset 3, -24
 591              		.cfi_offset 4, -20
 592              		.cfi_offset 5, -16
 593              		.cfi_offset 6, -12
 594              		.cfi_offset 7, -8
 595              		.cfi_offset 14, -4
 596 0002 2DED028B 		vpush.64	{d8}
 597              	.LCFI10:
 598              		.cfi_def_cfa_offset 32
 599              		.cfi_offset 80, -32
 600              		.cfi_offset 81, -28
 601 0006 0546     		mov	r5, r0
 602 0008 0C46     		mov	r4, r1
 251:Core/Src/Motor_Speed_pid.c **** 	const float c = 0.5;	 //m
 603              		.loc 1 251 2 is_stmt 1 view .LVU138
 604              	.LVL30:
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 17


 252:Core/Src/Motor_Speed_pid.c **** 	const float r = 0.1;   //m
 605              		.loc 1 252 2 view .LVU139
 253:Core/Src/Motor_Speed_pid.c **** 	float left_wheel_w = left_motor_speed/19.0f/9.55f;  //motor_speed(rpm)->wheel_speed(rad/s)
 606              		.loc 1 253 2 view .LVU140
 607              		.loc 1 253 39 is_stmt 0 view .LVU141
 608 000a B3EE037A 		vmov.f32	s14, #1.9e+1
 609 000e C0EE076A 		vdiv.f32	s13, s0, s14
 610              		.loc 1 253 8 view .LVU142
 611 0012 DFED1B7A 		vldr.32	s15, .L46
 612 0016 86EEA78A 		vdiv.f32	s16, s13, s15
 613              	.LVL31:
 254:Core/Src/Motor_Speed_pid.c **** 	float right_wheel_w = right_motor_speed/19.0f/9.55f;
 614              		.loc 1 254 2 is_stmt 1 view .LVU143
 615              		.loc 1 254 41 is_stmt 0 view .LVU144
 616 001a C0EE876A 		vdiv.f32	s13, s1, s14
 617              		.loc 1 254 8 view .LVU145
 618 001e C6EEA78A 		vdiv.f32	s17, s13, s15
 619              	.LVL32:
 255:Core/Src/Motor_Speed_pid.c **** 	float vL = left_wheel_w * r;
 620              		.loc 1 255 2 is_stmt 1 view .LVU146
 621              		.loc 1 255 8 is_stmt 0 view .LVU147
 622 0022 DFED187A 		vldr.32	s15, .L46+4
 623 0026 28EE278A 		vmul.f32	s16, s16, s15
 624              	.LVL33:
 256:Core/Src/Motor_Speed_pid.c **** 	float vR = right_wheel_w * r;
 625              		.loc 1 256 2 is_stmt 1 view .LVU148
 626              		.loc 1 256 8 is_stmt 0 view .LVU149
 627 002a 68EEA78A 		vmul.f32	s17, s17, s15
 628              	.LVL34:
 257:Core/Src/Motor_Speed_pid.c **** 	*vcx = 0.5*vL + 0.5*vR;;   //  m/s
 629              		.loc 1 257 2 is_stmt 1 view .LVU150
 630              		.loc 1 257 12 is_stmt 0 view .LVU151
 631 002e 18EE100A 		vmov	r0, s16
 632              	.LVL35:
 633              		.loc 1 257 12 view .LVU152
 634 0032 FFF7FEFF 		bl	__aeabi_f2d
 635              	.LVL36:
 636              		.loc 1 257 12 view .LVU153
 637 0036 0022     		movs	r2, #0
 638 0038 134B     		ldr	r3, .L46+8
 639 003a FFF7FEFF 		bl	__aeabi_dmul
 640              	.LVL37:
 641 003e 0646     		mov	r6, r0
 642 0040 0F46     		mov	r7, r1
 643              		.loc 1 257 21 view .LVU154
 644 0042 18EE900A 		vmov	r0, s17
 645 0046 FFF7FEFF 		bl	__aeabi_f2d
 646              	.LVL38:
 647 004a 0022     		movs	r2, #0
 648 004c 0E4B     		ldr	r3, .L46+8
 649 004e FFF7FEFF 		bl	__aeabi_dmul
 650              	.LVL39:
 651 0052 0246     		mov	r2, r0
 652 0054 0B46     		mov	r3, r1
 653              		.loc 1 257 16 view .LVU155
 654 0056 3046     		mov	r0, r6
 655 0058 3946     		mov	r1, r7
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 18


 656 005a FFF7FEFF 		bl	__aeabi_dadd
 657              	.LVL40:
 658 005e FFF7FEFF 		bl	__aeabi_d2f
 659              	.LVL41:
 660              		.loc 1 257 7 view .LVU156
 661 0062 2860     		str	r0, [r5]	@ float
 662              		.loc 1 257 25 is_stmt 1 view .LVU157
 258:Core/Src/Motor_Speed_pid.c **** 	*w = -vL/c + vR/c;           //  rad/s
 663              		.loc 1 258 2 view .LVU158
 664              		.loc 1 258 7 is_stmt 0 view .LVU159
 665 0064 B1EE488A 		vneg.f32	s16, s16
 666              	.LVL42:
 667              		.loc 1 258 10 view .LVU160
 668 0068 38EE088A 		vadd.f32	s16, s16, s16
 669              		.loc 1 258 17 view .LVU161
 670 006c 78EEA88A 		vadd.f32	s17, s17, s17
 671              	.LVL43:
 672              		.loc 1 258 13 view .LVU162
 673 0070 38EE288A 		vadd.f32	s16, s16, s17
 674              		.loc 1 258 5 view .LVU163
 675 0074 84ED008A 		vstr.32	s16, [r4]
 259:Core/Src/Motor_Speed_pid.c **** }
 676              		.loc 1 259 1 view .LVU164
 677 0078 BDEC028B 		vldm	sp!, {d8}
 678              	.LCFI11:
 679              		.cfi_restore 80
 680              		.cfi_restore 81
 681              		.cfi_def_cfa_offset 24
 682 007c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 683              	.LVL44:
 684              	.L47:
 685              		.loc 1 259 1 view .LVU165
 686 007e 00BF     		.align	2
 687              	.L46:
 688 0080 CDCC1841 		.word	1092144333
 689 0084 CDCCCC3D 		.word	1036831949
 690 0088 0000E03F 		.word	1071644672
 691              		.cfi_endproc
 692              	.LFE167:
 694              		.section	.text.speed_print,"ax",%progbits
 695              		.align	1
 696              		.global	speed_print
 697              		.syntax unified
 698              		.thumb
 699              		.thumb_func
 701              	speed_print:
 702              	.LFB168:
 260:Core/Src/Motor_Speed_pid.c **** void speed_print()
 261:Core/Src/Motor_Speed_pid.c **** {
 703              		.loc 1 261 1 is_stmt 1 view -0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707              		@ link register save eliminated.
 262:Core/Src/Motor_Speed_pid.c **** 	//usart_printf("%d,%f,%f,%d,%d,%f,%d,%d,%d\n",motor_chassis[0].speed_rpm,       set_spdL,   motor_
 263:Core/Src/Motor_Speed_pid.c **** }...
 708              		.loc 1 263 1 view .LVU167
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 19


 709 0000 7047     		bx	lr
 710              		.cfi_endproc
 711              	.LFE168:
 713              		.section	.bss.out_last.0,"aw",%nobits
 714              		.align	2
 717              	out_last.0:
 718 0000 00000000 		.space	4
 719              		.section	.data.fisrt_flag.1,"aw"
 722              	fisrt_flag.1:
 723 0000 01       		.byte	1
 724              		.global	free_flag
 725              		.section	.bss.free_flag,"aw",%nobits
 726              		.align	2
 729              	free_flag:
 730 0000 00000000 		.space	4
 731              		.global	motor_shutdown
 732              		.section	.bss.motor_shutdown,"aw",%nobits
 733              		.align	2
 736              	motor_shutdown:
 737 0000 00000000 		.space	4
 738              		.global	motor_ready
 739              		.section	.bss.motor_ready,"aw",%nobits
 740              		.align	2
 743              	motor_ready:
 744 0000 00000000 		.space	4
 745              		.global	flaggg
 746              		.section	.bss.flaggg,"aw",%nobits
 747              		.align	2
 750              	flaggg:
 751 0000 00000000 		.space	4
 752              		.global	r
 753              		.section	.data.r,"aw"
 754              		.align	2
 757              	r:
 758 0000 CDCCCC3D 		.word	1036831949
 759              		.global	C
 760              		.section	.data.C,"aw"
 761              		.align	2
 764              	C:
 765 0000 1F85EB3E 		.word	1055622431
 766              		.global	set_spdR1
 767              		.section	.bss.set_spdR1,"aw",%nobits
 768              		.align	2
 771              	set_spdR1:
 772 0000 00000000 		.space	4
 773              		.global	set_spdL1
 774              		.section	.bss.set_spdL1,"aw",%nobits
 775              		.align	2
 778              	set_spdL1:
 779 0000 00000000 		.space	4
 780              		.global	set_spdR
 781              		.section	.bss.set_spdR,"aw",%nobits
 782              		.align	2
 785              	set_spdR:
 786 0000 00000000 		.space	4
 787              		.global	set_spdL
 788              		.section	.bss.set_spdL,"aw",%nobits
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 20


 789              		.align	2
 792              	set_spdL:
 793 0000 00000000 		.space	4
 794              		.global	motor_pid
 795              		.section	.bss.motor_pid,"aw",%nobits
 796              		.align	2
 799              	motor_pid:
 800 0000 00000000 		.space	416
 800      00000000 
 800      00000000 
 800      00000000 
 800      00000000 
 801              		.text
 802              	.Letext0:
 803              		.file 2 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 804              		.file 3 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 805              		.file 4 "Core/Inc/CAN_receive.h"
 806              		.file 5 "Core/Inc/Joystick.h"
 807              		.file 6 "Core/Inc/pid.h"
 808              		.file 7 "Core/Inc/Motor_Speed_pid.h"
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 Motor_Speed_pid.c
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:21     .text.low_pass_filter:00000000 $t
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:27     .text.low_pass_filter:00000000 low_pass_filter
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:89     .text.low_pass_filter:00000040 $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:722    .data.fisrt_flag.1:00000000 fisrt_flag.1
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:717    .bss.out_last.0:00000000 out_last.0
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:98     .text.Motor_Speed_Calc:00000000 $t
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:104    .text.Motor_Speed_Calc:00000000 Motor_Speed_Calc
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:284    .text.Motor_Speed_Calc:00000110 $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:736    .bss.motor_shutdown:00000000 motor_shutdown
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:743    .bss.motor_ready:00000000 motor_ready
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:792    .bss.set_spdL:00000000 set_spdL
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:785    .bss.set_spdR:00000000 set_spdR
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:764    .data.C:00000000 C
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:757    .data.r:00000000 r
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:302    .text.Motor_Speed_pid_init:00000000 $t
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:308    .text.Motor_Speed_pid_init:00000000 Motor_Speed_pid_init
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:378    .text.Motor_Speed_pid_init:00000048 $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:799    .bss.motor_pid:00000000 motor_pid
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:385    .text.Set_free:00000000 $t
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:391    .text.Set_free:00000000 Set_free
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:444    .text.Set_free:0000002c $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:449    .text.Speed_set:00000000 $t
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:455    .text.Speed_set:00000000 Speed_set
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:563    .text.Speed_set:00000094 $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:729    .bss.free_flag:00000000 free_flag
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:573    .text.MOTORrpm2vw:00000000 $t
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:579    .text.MOTORrpm2vw:00000000 MOTORrpm2vw
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:688    .text.MOTORrpm2vw:00000080 $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:695    .text.speed_print:00000000 $t
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:701    .text.speed_print:00000000 speed_print
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:714    .bss.out_last.0:00000000 $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:726    .bss.free_flag:00000000 $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:733    .bss.motor_shutdown:00000000 $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:740    .bss.motor_ready:00000000 $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:750    .bss.flaggg:00000000 flaggg
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:747    .bss.flaggg:00000000 $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:754    .data.r:00000000 $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:761    .data.C:00000000 $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:771    .bss.set_spdR1:00000000 set_spdR1
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:768    .bss.set_spdR1:00000000 $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:778    .bss.set_spdL1:00000000 set_spdL1
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:775    .bss.set_spdL1:00000000 $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:782    .bss.set_spdR:00000000 $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:789    .bss.set_spdL:00000000 $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s:796    .bss.motor_pid:00000000 $d

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dmul
__aeabi_d2f
Vcx
Wc
pid_init
CAN_cmd_chassis
motor_chassis
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//cc5A8dLz.s 			page 22


__aeabi_dadd
