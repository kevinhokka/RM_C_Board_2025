ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"Task.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/Task.c"
  20              		.section	.text.TaskAdd,"ax",%progbits
  21              		.align	1
  22              		.global	TaskAdd
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	TaskAdd:
  28              	.LVL0:
  29              	.LFB162:
   1:Core/Src/Task.c **** #include "Task.h"
   2:Core/Src/Task.c **** #include "user_usart.h"
   3:Core/Src/Task.c **** 
   4:Core/Src/Task.c **** uint8_t tot = 0; // counter for tasks, tot == 0 for no task
   5:Core/Src/Task.c **** uint8_t CheckStcik = 0; // Check Stick
   6:Core/Src/Task.c **** Task Tasks[max_tasks_num];
   7:Core/Src/Task.c **** 
   8:Core/Src/Task.c **** Task *TaskAdd(void (*TaskFunction)(void), uint8_t Period){
  30              		.loc 1 8 58 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 8 58 is_stmt 0 view .LVU1
  35 0000 10B5     		push	{r4, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
   9:Core/Src/Task.c ****     Tasks[++tot].TaskFunction = TaskFunction;
  40              		.loc 1 9 5 is_stmt 1 view .LVU2
  41              		.loc 1 9 11 is_stmt 0 view .LVU3
  42 0002 0E4A     		ldr	r2, .L3
  43 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  44 0006 0133     		adds	r3, r3, #1
  45 0008 DBB2     		uxtb	r3, r3
  46              		.loc 1 9 31 view .LVU4
  47 000a 1370     		strb	r3, [r2]
  48 000c 0C4C     		ldr	r4, .L3+4
  49 000e 03EB430E 		add	lr, r3, r3, lsl #1
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s 			page 2


  50 0012 04EB8E02 		add	r2, r4, lr, lsl #2
  51 0016 9060     		str	r0, [r2, #8]
  10:Core/Src/Task.c ****     Tasks[tot].Running = false;
  52              		.loc 1 10 5 is_stmt 1 view .LVU5
  53              		.loc 1 10 24 is_stmt 0 view .LVU6
  54 0018 4FF0000C 		mov	ip, #0
  55 001c 82F801C0 		strb	ip, [r2, #1]
  11:Core/Src/Task.c ****     Tasks[tot].Period = (Period < 0) ? 0 : Period; // make sure Period >= 0
  56              		.loc 1 11 5 is_stmt 1 view .LVU7
  57              		.loc 1 11 23 is_stmt 0 view .LVU8
  58 0020 D170     		strb	r1, [r2, #3]
  12:Core/Src/Task.c ****     Tasks[tot].Waiting = 0;
  59              		.loc 1 12 5 is_stmt 1 view .LVU9
  60              		.loc 1 12 24 is_stmt 0 view .LVU10
  61 0022 82F804C0 		strb	ip, [r2, #4]
  13:Core/Src/Task.c ****     Tasks[tot].IsOn = true; // Defaults to run the task
  62              		.loc 1 13 5 is_stmt 1 view .LVU11
  63              		.loc 1 13 21 is_stmt 0 view .LVU12
  64 0026 0121     		movs	r1, #1
  65              	.LVL1:
  66              		.loc 1 13 21 view .LVU13
  67 0028 04F82E10 		strb	r1, [r4, lr, lsl #2]
  14:Core/Src/Task.c ****     Tasks[tot].TimeTick = Tasks[tot].DeltaTime = 0; // Reset TimeTick
  68              		.loc 1 14 5 is_stmt 1 view .LVU14
  69              		.loc 1 14 48 is_stmt 0 view .LVU15
  70 002c 82F806C0 		strb	ip, [r2, #6]
  71              		.loc 1 14 25 view .LVU16
  72 0030 82F805C0 		strb	ip, [r2, #5]
  15:Core/Src/Task.c ****     Tasks[tot].PrintDeltaTime = false; // Defaults not to print
  73              		.loc 1 15 5 is_stmt 1 view .LVU17
  74              		.loc 1 15 31 is_stmt 0 view .LVU18
  75 0034 82F802C0 		strb	ip, [r2, #2]
  16:Core/Src/Task.c ****     return &Tasks[tot];
  76              		.loc 1 16 5 is_stmt 1 view .LVU19
  17:Core/Src/Task.c **** }
  77              		.loc 1 17 1 is_stmt 0 view .LVU20
  78 0038 1046     		mov	r0, r2
  79              	.LVL2:
  80              		.loc 1 17 1 view .LVU21
  81 003a 10BD     		pop	{r4, pc}
  82              	.L4:
  83              		.align	2
  84              	.L3:
  85 003c 00000000 		.word	tot
  86 0040 00000000 		.word	Tasks
  87              		.cfi_endproc
  88              	.LFE162:
  90              		.section	.text.TaskCheck,"ax",%progbits
  91              		.align	1
  92              		.global	TaskCheck
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  97              	TaskCheck:
  98              	.LFB163:
  18:Core/Src/Task.c **** 
  19:Core/Src/Task.c **** void TaskCheck(){
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s 			page 3


  99              		.loc 1 19 17 is_stmt 1 view -0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
  20:Core/Src/Task.c ****     CheckStcik++;
 104              		.loc 1 20 5 view .LVU23
 105              		.loc 1 20 15 is_stmt 0 view .LVU24
 106 0000 104A     		ldr	r2, .L10
 107 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 108 0004 0133     		adds	r3, r3, #1
 109 0006 1370     		strb	r3, [r2]
  21:Core/Src/Task.c ****     for(uint8_t i = 1; i <= tot; i++){
 110              		.loc 1 21 5 is_stmt 1 view .LVU25
 111              	.LBB2:
 112              		.loc 1 21 9 view .LVU26
 113              	.LVL3:
 114              		.loc 1 21 17 is_stmt 0 view .LVU27
 115 0008 0123     		movs	r3, #1
 116              		.loc 1 21 5 view .LVU28
 117 000a 01E0     		b	.L6
 118              	.LVL4:
 119              	.L7:
 120              		.loc 1 21 35 is_stmt 1 discriminator 2 view .LVU29
 121 000c 0133     		adds	r3, r3, #1
 122              	.LVL5:
 123              		.loc 1 21 35 is_stmt 0 discriminator 2 view .LVU30
 124 000e DBB2     		uxtb	r3, r3
 125              	.LVL6:
 126              	.L6:
 127              		.loc 1 21 26 is_stmt 1 discriminator 1 view .LVU31
 128 0010 0D4A     		ldr	r2, .L10+4
 129 0012 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 130 0014 9A42     		cmp	r2, r3
 131 0016 14D3     		bcc	.L9
  22:Core/Src/Task.c ****         // Only check task that is on and waiting
  23:Core/Src/Task.c ****         if(Tasks[i].IsOn && Tasks[i].Waiting){
 132              		.loc 1 23 9 view .LVU32
 133              		.loc 1 23 20 is_stmt 0 view .LVU33
 134 0018 03EB4301 		add	r1, r3, r3, lsl #1
 135 001c 8A00     		lsls	r2, r1, #2
 136 001e 0B49     		ldr	r1, .L10+8
 137 0020 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 138              		.loc 1 23 11 view .LVU34
 139 0022 002A     		cmp	r2, #0
 140 0024 F2D0     		beq	.L7
 141              		.loc 1 23 37 discriminator 1 view .LVU35
 142 0026 03EB4302 		add	r2, r3, r3, lsl #1
 143 002a 9100     		lsls	r1, r2, #2
 144 002c 074A     		ldr	r2, .L10+8
 145 002e 0A44     		add	r2, r2, r1
 146 0030 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 147              		.loc 1 23 26 discriminator 1 view .LVU36
 148 0032 002A     		cmp	r2, #0
 149 0034 EAD0     		beq	.L7
  24:Core/Src/Task.c ****             Tasks[i].Waiting--;
 150              		.loc 1 24 13 is_stmt 1 view .LVU37
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s 			page 4


 151              		.loc 1 24 29 is_stmt 0 view .LVU38
 152 0036 8C46     		mov	ip, r1
 153 0038 0449     		ldr	r1, .L10+8
 154 003a 6144     		add	r1, r1, ip
 155 003c 013A     		subs	r2, r2, #1
 156 003e 0A71     		strb	r2, [r1, #4]
 157 0040 E4E7     		b	.L7
 158              	.L9:
 159              	.LBE2:
  25:Core/Src/Task.c ****         }
  26:Core/Src/Task.c ****     }
  27:Core/Src/Task.c **** }
 160              		.loc 1 27 1 view .LVU39
 161 0042 7047     		bx	lr
 162              	.L11:
 163              		.align	2
 164              	.L10:
 165 0044 00000000 		.word	CheckStcik
 166 0048 00000000 		.word	tot
 167 004c 00000000 		.word	Tasks
 168              		.cfi_endproc
 169              	.LFE163:
 171              		.section	.rodata.TaskRun.str1.4,"aMS",%progbits,1
 172              		.align	2
 173              	.LC0:
 174 0000 5461736B 		.ascii	"Task No.%d DeltaTime: %d\012\000"
 174      204E6F2E 
 174      25642044 
 174      656C7461 
 174      54696D65 
 175              		.section	.text.TaskRun,"ax",%progbits
 176              		.align	1
 177              		.global	TaskRun
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 182              	TaskRun:
 183              	.LFB164:
  28:Core/Src/Task.c **** 
  29:Core/Src/Task.c **** void TaskRun(){
 184              		.loc 1 29 15 is_stmt 1 view -0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 189              	.LCFI1:
 190              		.cfi_def_cfa_offset 24
 191              		.cfi_offset 3, -24
 192              		.cfi_offset 4, -20
 193              		.cfi_offset 5, -16
 194              		.cfi_offset 6, -12
 195              		.cfi_offset 7, -8
 196              		.cfi_offset 14, -4
  30:Core/Src/Task.c ****     for(uint8_t i = 1; i <= tot; i++){
 197              		.loc 1 30 5 view .LVU41
 198              	.LBB3:
 199              		.loc 1 30 9 view .LVU42
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s 			page 5


 200              	.LVL7:
 201              		.loc 1 30 17 is_stmt 0 view .LVU43
 202 0002 0124     		movs	r4, #1
 203              		.loc 1 30 5 view .LVU44
 204 0004 13E0     		b	.L13
 205              	.LVL8:
 206              	.L15:
  31:Core/Src/Task.c ****         // Only run task that is on, not running and not waiting
  32:Core/Src/Task.c ****         if(Tasks[i].IsOn && !Tasks[i].Running && !Tasks[i].Waiting){
  33:Core/Src/Task.c ****             Tasks[i].Waiting = Tasks[i].Period; // Reset Waiting Period
  34:Core/Src/Task.c ****             Tasks[i].DeltaTime = CheckStcik - Tasks[i].TimeTick; // Calculate delta time
  35:Core/Src/Task.c ****             if(Tasks[i].PrintDeltaTime) usart_printf("Task No.%d DeltaTime: %d\n", i, Tasks[i].Delt
  36:Core/Src/Task.c ****             Tasks[i].TimeTick = CheckStcik; // Update TimeTick
 207              		.loc 1 36 13 is_stmt 1 view .LVU45
 208              		.loc 1 36 31 is_stmt 0 view .LVU46
 209 0006 204E     		ldr	r6, .L19
 210 0008 6F00     		lsls	r7, r5, #1
 211 000a 05EB4502 		add	r2, r5, r5, lsl #1
 212 000e 9300     		lsls	r3, r2, #2
 213 0010 3344     		add	r3, r3, r6
 214 0012 1E4A     		ldr	r2, .L19+4
 215 0014 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 216 0016 5A71     		strb	r2, [r3, #5]
  37:Core/Src/Task.c ****             Tasks[i].Running = true;
 217              		.loc 1 37 13 is_stmt 1 view .LVU47
 218              		.loc 1 37 30 is_stmt 0 view .LVU48
 219 0018 0122     		movs	r2, #1
 220 001a 5A70     		strb	r2, [r3, #1]
  38:Core/Src/Task.c ****             Tasks[i].TaskFunction();
 221              		.loc 1 38 13 is_stmt 1 view .LVU49
 222              		.loc 1 38 21 is_stmt 0 view .LVU50
 223 001c 9B68     		ldr	r3, [r3, #8]
 224              		.loc 1 38 13 view .LVU51
 225 001e 9847     		blx	r3
 226              	.LVL9:
  39:Core/Src/Task.c ****             Tasks[i].Running = false;
 227              		.loc 1 39 13 is_stmt 1 view .LVU52
 228              		.loc 1 39 30 is_stmt 0 view .LVU53
 229 0020 7B19     		adds	r3, r7, r5
 230 0022 9A00     		lsls	r2, r3, #2
 231 0024 1644     		add	r6, r6, r2
 232 0026 0023     		movs	r3, #0
 233 0028 7370     		strb	r3, [r6, #1]
 234              	.L14:
  30:Core/Src/Task.c ****         // Only run task that is on, not running and not waiting
 235              		.loc 1 30 35 is_stmt 1 discriminator 2 view .LVU54
 236 002a 0134     		adds	r4, r4, #1
 237              	.LVL10:
  30:Core/Src/Task.c ****         // Only run task that is on, not running and not waiting
 238              		.loc 1 30 35 is_stmt 0 discriminator 2 view .LVU55
 239 002c E4B2     		uxtb	r4, r4
 240              	.LVL11:
 241              	.L13:
  30:Core/Src/Task.c ****         // Only run task that is on, not running and not waiting
 242              		.loc 1 30 26 is_stmt 1 discriminator 1 view .LVU56
 243 002e 184B     		ldr	r3, .L19+8
 244 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s 			page 6


 245 0032 A342     		cmp	r3, r4
 246 0034 26D3     		bcc	.L18
  32:Core/Src/Task.c ****             Tasks[i].Waiting = Tasks[i].Period; // Reset Waiting Period
 247              		.loc 1 32 9 view .LVU57
  32:Core/Src/Task.c ****             Tasks[i].Waiting = Tasks[i].Period; // Reset Waiting Period
 248              		.loc 1 32 20 is_stmt 0 view .LVU58
 249 0036 2546     		mov	r5, r4
 250 0038 04EB4402 		add	r2, r4, r4, lsl #1
 251 003c 9300     		lsls	r3, r2, #2
 252 003e 124A     		ldr	r2, .L19
 253 0040 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  32:Core/Src/Task.c ****             Tasks[i].Waiting = Tasks[i].Period; // Reset Waiting Period
 254              		.loc 1 32 11 view .LVU59
 255 0042 002B     		cmp	r3, #0
 256 0044 F1D0     		beq	.L14
  32:Core/Src/Task.c ****             Tasks[i].Waiting = Tasks[i].Period; // Reset Waiting Period
 257              		.loc 1 32 38 discriminator 1 view .LVU60
 258 0046 04EB4403 		add	r3, r4, r4, lsl #1
 259 004a 9A00     		lsls	r2, r3, #2
 260 004c 0E4B     		ldr	r3, .L19
 261 004e 1344     		add	r3, r3, r2
 262 0050 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
  32:Core/Src/Task.c ****             Tasks[i].Waiting = Tasks[i].Period; // Reset Waiting Period
 263              		.loc 1 32 26 discriminator 1 view .LVU61
 264 0052 002B     		cmp	r3, #0
 265 0054 E9D1     		bne	.L14
  32:Core/Src/Task.c ****             Tasks[i].Waiting = Tasks[i].Period; // Reset Waiting Period
 266              		.loc 1 32 59 discriminator 2 view .LVU62
 267 0056 0C4B     		ldr	r3, .L19
 268 0058 1344     		add	r3, r3, r2
 269 005a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
  32:Core/Src/Task.c ****             Tasks[i].Waiting = Tasks[i].Period; // Reset Waiting Period
 270              		.loc 1 32 47 discriminator 2 view .LVU63
 271 005c 002B     		cmp	r3, #0
 272 005e E4D1     		bne	.L14
  33:Core/Src/Task.c ****             Tasks[i].DeltaTime = CheckStcik - Tasks[i].TimeTick; // Calculate delta time
 273              		.loc 1 33 13 is_stmt 1 view .LVU64
  33:Core/Src/Task.c ****             Tasks[i].DeltaTime = CheckStcik - Tasks[i].TimeTick; // Calculate delta time
 274              		.loc 1 33 40 is_stmt 0 view .LVU65
 275 0060 094B     		ldr	r3, .L19
 276 0062 1344     		add	r3, r3, r2
 277 0064 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
  33:Core/Src/Task.c ****             Tasks[i].DeltaTime = CheckStcik - Tasks[i].TimeTick; // Calculate delta time
 278              		.loc 1 33 30 view .LVU66
 279 0066 1A71     		strb	r2, [r3, #4]
  34:Core/Src/Task.c ****             if(Tasks[i].PrintDeltaTime) usart_printf("Task No.%d DeltaTime: %d\n", i, Tasks[i].Delt
 280              		.loc 1 34 13 is_stmt 1 view .LVU67
  34:Core/Src/Task.c ****             if(Tasks[i].PrintDeltaTime) usart_printf("Task No.%d DeltaTime: %d\n", i, Tasks[i].Delt
 281              		.loc 1 34 55 is_stmt 0 view .LVU68
 282 0068 5979     		ldrb	r1, [r3, #5]	@ zero_extendqisi2
  34:Core/Src/Task.c ****             if(Tasks[i].PrintDeltaTime) usart_printf("Task No.%d DeltaTime: %d\n", i, Tasks[i].Delt
 283              		.loc 1 34 45 view .LVU69
 284 006a 084A     		ldr	r2, .L19+4
 285 006c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 286 006e 521A     		subs	r2, r2, r1
 287 0070 D2B2     		uxtb	r2, r2
  34:Core/Src/Task.c ****             if(Tasks[i].PrintDeltaTime) usart_printf("Task No.%d DeltaTime: %d\n", i, Tasks[i].Delt
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s 			page 7


 288              		.loc 1 34 32 view .LVU70
 289 0072 9A71     		strb	r2, [r3, #6]
  35:Core/Src/Task.c ****             Tasks[i].TimeTick = CheckStcik; // Update TimeTick
 290              		.loc 1 35 13 is_stmt 1 view .LVU71
  35:Core/Src/Task.c ****             Tasks[i].TimeTick = CheckStcik; // Update TimeTick
 291              		.loc 1 35 24 is_stmt 0 view .LVU72
 292 0074 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
  35:Core/Src/Task.c ****             Tasks[i].TimeTick = CheckStcik; // Update TimeTick
 293              		.loc 1 35 15 view .LVU73
 294 0076 002B     		cmp	r3, #0
 295 0078 C5D0     		beq	.L15
  35:Core/Src/Task.c ****             Tasks[i].TimeTick = CheckStcik; // Update TimeTick
 296              		.loc 1 35 41 is_stmt 1 discriminator 1 view .LVU74
 297 007a 2146     		mov	r1, r4
 298 007c 0548     		ldr	r0, .L19+12
 299 007e FFF7FEFF 		bl	usart_printf
 300              	.LVL12:
 301 0082 C0E7     		b	.L15
 302              	.L18:
 303              	.LBE3:
  40:Core/Src/Task.c ****         }
  41:Core/Src/Task.c ****     }
  42:Core/Src/Task.c **** }
 304              		.loc 1 42 1 is_stmt 0 view .LVU75
 305 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 306              	.LVL13:
 307              	.L20:
 308              		.loc 1 42 1 view .LVU76
 309 0086 00BF     		.align	2
 310              	.L19:
 311 0088 00000000 		.word	Tasks
 312 008c 00000000 		.word	CheckStcik
 313 0090 00000000 		.word	tot
 314 0094 00000000 		.word	.LC0
 315              		.cfi_endproc
 316              	.LFE164:
 318              		.section	.text.TaskOn,"ax",%progbits
 319              		.align	1
 320              		.global	TaskOn
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 325              	TaskOn:
 326              	.LVL14:
 327              	.LFB165:
  43:Core/Src/Task.c **** 
  44:Core/Src/Task.c **** void TaskOn(Task *task){
 328              		.loc 1 44 24 is_stmt 1 view -0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		@ link register save eliminated.
  45:Core/Src/Task.c ****     task -> IsOn = true;
 333              		.loc 1 45 5 view .LVU78
 334              		.loc 1 45 18 is_stmt 0 view .LVU79
 335 0000 0123     		movs	r3, #1
 336 0002 0370     		strb	r3, [r0]
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s 			page 8


  46:Core/Src/Task.c **** }
 337              		.loc 1 46 1 view .LVU80
 338 0004 7047     		bx	lr
 339              		.cfi_endproc
 340              	.LFE165:
 342              		.section	.text.TaskOff,"ax",%progbits
 343              		.align	1
 344              		.global	TaskOff
 345              		.syntax unified
 346              		.thumb
 347              		.thumb_func
 349              	TaskOff:
 350              	.LVL15:
 351              	.LFB166:
  47:Core/Src/Task.c **** 
  48:Core/Src/Task.c **** void TaskOff(Task *task){
 352              		.loc 1 48 25 is_stmt 1 view -0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              		@ link register save eliminated.
  49:Core/Src/Task.c ****     task -> IsOn = false;
 357              		.loc 1 49 5 view .LVU82
 358              		.loc 1 49 18 is_stmt 0 view .LVU83
 359 0000 0023     		movs	r3, #0
 360 0002 0370     		strb	r3, [r0]
  50:Core/Src/Task.c **** }
 361              		.loc 1 50 1 view .LVU84
 362 0004 7047     		bx	lr
 363              		.cfi_endproc
 364              	.LFE166:
 366              		.section	.text.TaskPrintDeltaTime,"ax",%progbits
 367              		.align	1
 368              		.global	TaskPrintDeltaTime
 369              		.syntax unified
 370              		.thumb
 371              		.thumb_func
 373              	TaskPrintDeltaTime:
 374              	.LVL16:
 375              	.LFB167:
  51:Core/Src/Task.c **** 
  52:Core/Src/Task.c **** void TaskPrintDeltaTime(Task *task){
 376              		.loc 1 52 36 is_stmt 1 view -0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 0
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 380              		@ link register save eliminated.
  53:Core/Src/Task.c ****     task -> PrintDeltaTime = true;
 381              		.loc 1 53 5 view .LVU86
 382              		.loc 1 53 28 is_stmt 0 view .LVU87
 383 0000 0123     		movs	r3, #1
 384 0002 8370     		strb	r3, [r0, #2]
  54:Core/Src/Task.c **** }...
 385              		.loc 1 54 1 view .LVU88
 386 0004 7047     		bx	lr
 387              		.cfi_endproc
 388              	.LFE167:
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s 			page 9


 390              		.global	Tasks
 391              		.section	.bss.Tasks,"aw",%nobits
 392              		.align	2
 395              	Tasks:
 396 0000 00000000 		.space	120
 396      00000000 
 396      00000000 
 396      00000000 
 396      00000000 
 397              		.global	CheckStcik
 398              		.section	.bss.CheckStcik,"aw",%nobits
 401              	CheckStcik:
 402 0000 00       		.space	1
 403              		.global	tot
 404              		.section	.bss.tot,"aw",%nobits
 407              	tot:
 408 0000 00       		.space	1
 409              		.text
 410              	.Letext0:
 411              		.file 2 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 412              		.file 3 "/Applications/ArmGNUToolchain/13.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 413              		.file 4 "Core/Inc/Task.h"
 414              		.file 5 "Core/Inc/user_usart.h"
ARM GAS  /var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 Task.c
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:21     .text.TaskAdd:00000000 $t
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:27     .text.TaskAdd:00000000 TaskAdd
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:85     .text.TaskAdd:0000003c $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:407    .bss.tot:00000000 tot
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:395    .bss.Tasks:00000000 Tasks
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:91     .text.TaskCheck:00000000 $t
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:97     .text.TaskCheck:00000000 TaskCheck
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:165    .text.TaskCheck:00000044 $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:401    .bss.CheckStcik:00000000 CheckStcik
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:172    .rodata.TaskRun.str1.4:00000000 $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:176    .text.TaskRun:00000000 $t
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:182    .text.TaskRun:00000000 TaskRun
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:311    .text.TaskRun:00000088 $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:319    .text.TaskOn:00000000 $t
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:325    .text.TaskOn:00000000 TaskOn
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:343    .text.TaskOff:00000000 $t
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:349    .text.TaskOff:00000000 TaskOff
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:367    .text.TaskPrintDeltaTime:00000000 $t
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:373    .text.TaskPrintDeltaTime:00000000 TaskPrintDeltaTime
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:392    .bss.Tasks:00000000 $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:402    .bss.CheckStcik:00000000 $d
/var/folders/w5/30yxzty101lfkjn94y0dlkk00000gn/T//ccW40o8a.s:408    .bss.tot:00000000 $d

UNDEFINED SYMBOLS
usart_printf
